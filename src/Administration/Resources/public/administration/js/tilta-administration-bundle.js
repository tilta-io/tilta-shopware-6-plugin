!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/bundles/tiltaadministrationbundle/",n(n.s="IpmE")}({"8oT9":function(t){t.exports=JSON.parse('{"tilta":{"config":{"testCredentialsButton":{"text":"Test credentials"},"notification":{"validCredentials":"The credentials are correct.","invalidCredentials":"The credentials are unfortunately wrong.","failedToTestCredentials":"An error occurred while checking the credentials!","NOT_AUTHORIZED":"The API token is invalid.","UNAUTHORIZED":"The API token is invalid.","MERCHANT_NOT_FOUND":"The API token is valid. The merchant ID is incorrect. Please double-check it."}}}}')},IpmE:function(t,e,n){"use strict";function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(o=r.key,a=void 0,a=function(t,e){if("object"!==i(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||"default");if("object"!==i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(o,"string"),"symbol"===i(a)?a:String(a)),r)}var o,a}function a(t,e){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},a(t,e)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,i=l(t);if(e){var r=l(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return s(this,n)}}function s(t,e){if(e&&("object"===i(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}n.r(e);var u=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&a(t,e)}(l,t);var e,n,i,s=c(l);function l(t,e){var n,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"tilta";return r(this,l),(n=s.call(this,t,e,i)).name="tiltaApiService",n}return e=l,(n=[{key:"testCredentials",value:function(t,e,n){return this.httpClient.post("".concat(this.getApiBasePath(),"/test-api-credentials"),{merchantExternalId:t,authToken:e,isSandbox:n},{headers:this.getBasicHeaders()}).then((function(t){return l.handleResponse(t)}))}}])&&o(e.prototype,n),i&&o(e,i),Object.defineProperty(e,"prototype",{writable:!1}),l}(Shopware.Classes.ApiService);Shopware.Application.addServiceProvider("tiltaApiService",(function(){var t=Shopware.Application.getContainer("factory"),e=Shopware.Application.getContainer("init"),n=t.apiService,i=new u(e.httpClient,Shopware.Service("loginService")),r=i.name;return n.register(r,i),i}));var f=n("lrgR"),d=n("8oT9"),p=Shopware,b=p.Component,h=p.Mixin;b.register("tilta-test-api-credentials-button",{template:'{% block tilta_test_api_credentials_button %}\n    <div class="tilta-test-api-credentials-button">\n        {% block tilta_test_api_credentials_button_process_button %}\n            <sw-button-process\n                class="tilta-test-api-credentials-button__process-button"\n                :isLoading="isLoading"\n                :processSuccess="isTestSuccessful"\n                :disabled="isLoading"\n                @click.prevent="testCredentials"\n                @process-finish="onTestFinish"\n                block>\n                {{ $tc(\'tilta.config.testCredentialsButton.text\') }}\n            </sw-button-process>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["tiltaApiService"],mixins:[h.getByName("notification")],snippets:{"de-DE":f,"en-GB":d},props:{apiMode:{type:String,required:!0}},data:function(){return{isLoading:!1,isTestSuccessful:!1}},methods:{onTestFinish:function(){this.isTestSuccessful=!1},testCredentials:function(){var t=this;this.isTestSuccessful=!1,this.isLoading=!0;var e=document.querySelector('[name="TiltaPaymentSW6.config.'.concat(this.apiMode,'ApiMerchantExternalId"]')).value,n=document.querySelector('[name="TiltaPaymentSW6.config.'.concat(this.apiMode,'ApiAuthToken"]')).value,i="sandbox"===this.apiMode;this.tiltaApiService.testCredentials(e,n,i).then((function(e){t.isLoading=!1,e.success?(t.isTestSuccessful=!0,t.createNotificationSuccess({message:t.$tc("tilta.config.notification.validCredentials")})):e.code&&t.$te("tilta.config.notification."+e.code)?t.createNotificationError({message:t.$tc("tilta.config.notification."+e.code)}):t.createNotificationError({message:t.$tc("tilta.config.notification.invalidCredentials")})})).catch((function(){t.isLoading=!1,t.createNotificationError({message:t.$tc("tilta.config.notification.failedToTestCredentials")})}))}}})},lrgR:function(t){t.exports=JSON.parse('{"tilta":{"config":{"testCredentialsButton":{"text":"Zugangsdaten testen"},"notification":{"validCredentials":"Die Zugangsdaten sind korrekt!","invalidCredentials":"Die Zugangsdaten sind ungültig.","failedToTestCredentials":"Beim Prüfen der Zugangsdaten ist ein Fehler aufgetreten!","NOT_AUTHORIZED":"Der API Token ist ungültig.","UNAUTHORIZED":"Der API Token ist ungültig.","MERCHANT_NOT_FOUND":"Der API Token ist korrekt. Die Händler ID ist nicht korrekt. Bitte prüfen Sie diese noch einmal."}}}}')}});